##This script should be run after the MLFormat.py script. It takes the formatted data file that is generated by that script and adds the necessary entity labels and trains the model. The resulting model is then outputted to a directory so that it can be tested.


import spacy
from spacy.tokens import Doc
from spacy.training import Example
import ast

# Load the data directly from the formatted_data.txt file
with open(r"C:\Users\brandon.ainsworth\Desktop\justicia\formatted_data.txt", "r") as file:
    TRAIN_DATA = [ast.literal_eval(line.strip()) for line in file.readlines()]

# Create a blank English model
nlp = spacy.blank('en')
ner = nlp.create_pipe('ner')
nlp.add_pipe('ner')

# Add the entity labels to the NER model
for _, annotations in TRAIN_DATA:
    for ent in annotations.get("entities"):
        ner.add_label(ent[2])

# Train the model with modified hyperparameters
optimizer = nlp.begin_training()
# optimizer.learn_rate = 0.001  # Adjusting the learning rate

for itn in range(20):  # Adjusting the number of iterations
    for text, annotations in TRAIN_DATA:
        doc = nlp.make_doc(text)
        example = Example.from_dict(doc, annotations)
        nlp.update([example], drop=0.3, sgd=optimizer)  # Adjusting the dropout rate


# Save the model to a directory
nlp.to_disk(r"C:\Users\brandon.ainsworth\Desktop\justicia\files\models")
